{"version":3,"sources":["ChatModule.jsx","App.js","reportWebVitals.js","index.js"],"names":["ChatModule","useState","token","undefined","user_id","user","setUser","text","timestamp","type","messages","setMessages","handleRequestCard","res","m","concat","author","username","id","avatarUrl","createCardContent","body","Date","data","className","title_id","description","href","link","style","maxWidth","src","img","alt","handleRequestMessage","author_id","message","createRequestContent","starRatedColor","numberOfStars","name","changeRating","rating","dish_id","event_id","config","headers","axios","post","then","i","length","sendRequestRating","handleRequestRating","createSelectContent","options","optionsArray","push","Button","fullWidth","variant","color","onClick","option_id","handleRequestSelect","console","log","sendSelectRequest","option_text","useEffect","header","userId","onSendMessage","width","height","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35e121b9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ChatBox from 'react-chat-plugin';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport StarRatings from 'react-star-ratings';\nimport './styles.css';\n\nexport default function ChatModule () {\n    const [user, setUser] = useState({token: undefined, user_id: undefined})\n    const [messages, setMessages] = useState([\n          {\n            text: 'Połączyłeś się z Asystentem Żywieniowym',\n            timestamp: 1578366389250,\n            type: 'notification',\n          }\n        ]);\n\n    const handleRequestCard = (res) => {\n      setMessages( m =>\n        m.concat({   \n          author: { username: 'Digital Assistant', id: 2, avatarUrl: 'https://image.flaticon.com/icons/svg/2446/2446032.svg' },\n          text:  createCardContent(res.body),\n          type: 'text',\n          timestamp: +new Date(),\n        })\n      )\n    }\n\n    const createCardContent = (data) => {\n      return (\n        <div>\n          <div className=\"card-title\">{data.title_id}</div>\n          <div className=\"card-desc\">{data.description}</div>\n          <div className=\"card-link\">Recipe: <a href={data.link}>{data.link}</a></div>\n          <img style={{ maxWidth: '600px'}} src={data.img} alt={data.title_id}></img>\n        </div>\n      )\n    }\n\n    const handleRequestMessage = (res) => {\n      let author;\n      if (res.author_id === 'bot') {\n        author = { username: 'Digital Assistant', id: 2, avatarUrl: 'https://image.flaticon.com/icons/svg/2446/2446032.svg' }\n      } else {\n        author = { \n          username: 'User',\n          id: 1,\n        }\n      }\n      setMessages( m =>\n        m.concat({   \n          author: author,\n          text: res.body.message,\n          type: 'text',\n          timestamp: +new Date(),\n        })\n      )\n    }\n\n  const sendRequestRating = (rating, dish_id, event_id) => {\n    let config = {\n      headers: {\n        'Authorization': 'Bearer ' + user.token,\n        'Content-Type': 'application/json'\n      }\n    }\n    let data = {\n      \"event_id\": event_id,\n      \"type\": \"rating_event\",\n      \"body\": {\n        \"rating\": rating,\n        \"dish_id\": dish_id\n      }\n    }\n    axios.post(`https://foodasistant.ml/add_event`, data, config).then(res => {\n      for (let i = 0; i < res.data.length ; i++) {\n        if (res.data[i].type === 'message') {\n          handleRequestMessage(res.data[i]);\n        }\n      }\n    });\n  }\n\n  const createRequestContent = (data) => {\n    return (\n      <StarRatings\n        starRatedColor=\"yellow\"\n        numberOfStars={5}\n        name='rating'\n        changeRating={(rating) => {sendRequestRating(rating, data.body.dish_id, data.event_id)}}\n      />\n    )\n  }\n\n  const handleRequestRating = (res) => {\n    setMessages( m =>\n      m.concat({   \n        author: { username: 'Digital Assistant', id: 2, avatarUrl: 'https://image.flaticon.com/icons/svg/2446/2446032.svg' },\n        text:  createRequestContent(res),\n        type: 'text',\n        timestamp: +new Date(),\n      })\n    )\n  }\n\n\n  const sendSelectRequest = (option_id, event_id) => {\n    let config = {\n      headers: {\n        'Authorization': 'Bearer ' + user.token,\n        'Content-Type': 'application/json'\n      }\n    }\n    let data = {\n      \"event_id\": event_id,\n      \"type\": \"select\",\n      \"body\": {\n        \"selected_option_id\": option_id\n    }\n  }\n\n  axios.post(`https://foodasistant.ml/add_event`, data, config).then(res => {\n  for (let i = 0; i < res.data.length ; i++) {\n      if (res.data[i].type === 'message') {\n        handleRequestMessage(res.data[i]);\n      } else if (res.data[i].type === 'card') {\n        handleRequestCard(res.data[i]);\n      } else if (res.data[i].type === 'select'){\n        handleRequestSelect(res.data[i]);\n      } else if (res.data[i].type === 'rating_event') {\n        handleRequestRating(res.data[i]);\n        console.log(res.data[i]);\n      }\n    }\n  }) \n  }\n\n  const createSelectContent = (options) => {\n    let event_id = options.event_id\n    options = options.body.options;\n    let optionsArray = [];\n    for (let i = 0; i<options.length; i++) {\n      optionsArray.push(\n        <div key={options[i].option_id} className=\"select-option\">\n          <Button fullWidth variant=\"contained\" color=\"primary\" onClick={() => {sendSelectRequest(options[i].option_id, event_id)}}>\n            {options[i].option_text}\n          </Button>\n        </div>\n      );\n    }\n    return (\n      <div>\n        {optionsArray}\n      </div>\n    )\n  }\n\n  const handleRequestSelect = (data) => {\n    setMessages( m =>\n      m.concat({   \n        author: { username: 'Digital Assistant', id: 2, avatarUrl: 'https://image.flaticon.com/icons/svg/2446/2446032.svg' },\n        text:  createSelectContent(data),\n        type: 'text',\n        timestamp: +new Date(),\n      })\n    )\n  }\n\n  // launch only once, at the beginning - set user token\n  useEffect(() => {\n    let config = {\n      header:  'Content-Type: application/json'\n    }\n    let data = {}\n    axios.post(`https://foodasistant.ml/auth`, data, config).then(res => {\n      setUser(res.data);\n    });\n  }, []);\n\n  // launch when user is set\n  useEffect(() => {\n    if (user.token) {\n      let config = {\n        headers: {\n          'Authorization': 'Bearer ' + user.token,\n          'Content-Type': 'application/json'\n        }\n      }\n      let data = {\n        \"type\": \"message\",\n        \"body\": {\n            \"message\": \"init request\"\n        }\n    }\n      axios.post(`https://foodasistant.ml/add_event`, data, config)\n      .then(res => {\n        setMessages( m =>\n          m.concat({   \n            author: { username: 'Digital Assistant', id: 2, avatarUrl: 'https://image.flaticon.com/icons/svg/2446/2446032.svg' },\n            text: res.data[0].body.message,\n            type: 'text',\n            timestamp: +new Date(),\n          })\n        )\n      })\n    }     \n  }, [user])\n\n  const handleOnSendMessage = (message) => {\n    setMessages( m =>\n      m.concat({\n        author: {\n          username: 'User',\n          id: 1,\n        },\n        text: message,\n        timestamp: +new Date(),\n        type: 'text',\n      })\n    );\n    if (user.token) {\n      let config = {\n        headers: {\n          'Authorization': 'Bearer ' + user.token,\n          'Content-Type': 'application/json'\n        }\n      }\n      let data = {\n        \"type\": \"message\",\n        \"body\": {\n            \"message\": message\n        }\n    }\n    axios.post(`https://foodasistant.ml/add_event`, data, config).then(res => {\n      for (let i = 0; i < res.data.length ; i++) {\n        if (res.data[i].type === 'message') {\n          handleRequestMessage(res.data[i]);\n        } else if (res.data[i].type === 'card') {\n          handleRequestCard(res.data[i]);\n        } else if (res.data[i].type === 'select'){\n          handleRequestSelect(res.data[i]);\n        } else {\n          console.log(res.data[i]);\n        }\n      }\n    })\n    }\n  };\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"chatbox-container\">\n        <ChatBox\n          messages={messages}\n          userId={1}\n          onSendMessage={handleOnSendMessage}\n          width={'800px'}\n          height={'89vh'}\n        />\n      </div>\n\n    </div>\n  );\n}","import ChatModule from './ChatModule';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ChatModule/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}