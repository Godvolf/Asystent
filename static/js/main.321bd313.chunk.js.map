{"version":3,"sources":["ChatModule.jsx","App.js","reportWebVitals.js","index.js"],"names":["ChatModule","useState","token","undefined","user_id","user","setUser","text","timestamp","type","messages","setMessages","createCardContent","data","className","title_id","description","href","link","src","img","alt","useEffect","axios","post","header","then","res","config","headers","m","concat","author","username","id","avatarUrl","body","message","Date","userId","onSendMessage","handleRequestMessage","handleRequestCard","width","height","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.321bd313.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ChatBox from 'react-chat-plugin';\nimport axios from 'axios';\nimport './styles.css';\n\nexport default function ChatModule () {\n    const [user, setUser] = useState({token: undefined, user_id: undefined})\n    const [messages, setMessages] = useState([\n          {\n            text: 'Połączyłeś się z Asystentem Żywieniowym',\n            timestamp: 1578366389250,\n            type: 'notification',\n          }\n        ]);\n\n    const handleRequestCard = (res) => {\n      setMessages( m =>\n        m.concat({   \n          author: { username: 'Digital Assistant', id: 2, avatarUrl: 'https://image.flaticon.com/icons/svg/2446/2446032.svg' },\n          text:  createCardContent(res.data[0].body),\n          type: 'text',\n          timestamp: +new Date(),\n        })\n      )\n    }\n\n    const createCardContent = (data) => {\n      return (\n        <div>\n          <div className=\"card-title\">{data.title_id}</div>\n          <div className=\"card-desc\">{data.description}</div>\n          <div className=\"card-link\">Recipe: <a href={data.link}>{data.link}</a></div>\n          <img src={data.img} alt={data.title_id}></img>\n        </div>\n      )\n    }\n\n    const handleRequestMessage = (res) => {\n      setMessages( m =>\n        m.concat({   \n          author: { username: 'Digital Assistant', id: 2, avatarUrl: 'https://image.flaticon.com/icons/svg/2446/2446032.svg' },\n          text: res.data[0].body.message,\n          type: 'text',\n          timestamp: +new Date(),\n        })\n      )\n    }\n      useEffect(() => {\n        let config = {\n          header:  'Content-Type: application/json'\n        }\n        let data = {}\n        axios.post(`https://foodasistant.ml/auth`, data, config).then(res => {\n          setUser(res.data);\n        });\n      }, []);\n\n      useEffect(() => {\n        if (user.token) {\n          let config = {\n            headers: {\n              'Authorization': 'Bearer ' + user.token,\n              'Content-Type': 'application/json'\n            }\n          }\n          let data = {\n            \"type\": \"message\",\n            \"body\": {\n                \"message\": \"init request\"\n            }\n        }\n          axios.post(`https://foodasistant.ml/add_event`, data, config)\n          .then(res => {\n            setMessages( m =>\n              m.concat({   \n                author: { username: 'Digital Assistant', id: 2, avatarUrl: 'https://image.flaticon.com/icons/svg/2446/2446032.svg' },\n                text: res.data[0].body.message,\n                type: 'text',\n                timestamp: +new Date(),\n              })\n            )\n          })\n        }\n        \n      }, [user])\n\n      const handleOnSendMessage = (message) => {\n        setMessages( m =>\n          m.concat({\n            author: {\n              username: 'User',\n              id: 1,\n            },\n            text: message,\n            timestamp: +new Date(),\n            type: 'text',\n          })\n        );\n        if (user.token) {\n          let config = {\n            headers: {\n              'Authorization': 'Bearer ' + user.token,\n              'Content-Type': 'application/json'\n            }\n          }\n          let data = {\n            \"type\": \"message\",\n            \"body\": {\n                \"message\": message\n            }\n        }\n          axios.post(`https://foodasistant.ml/add_event`, data, config)\n          .then(res => {\n            if (res.data[0].type === 'message') {\n              handleRequestMessage(res);\n            } else if (res.data[0].type === 'card') {\n              handleRequestCard(res);\n            }\n          })\n        }\n      };\n    return (\n      <div className=\"main-container\">\n        <div className=\"chatbox-container\">\n          <ChatBox\n            messages={messages}\n            userId={1}\n            onSendMessage={handleOnSendMessage}\n            width={'800px'}\n            height={'89vh'}\n          />\n        </div>\n\n      </div>\n    );\n}","import ChatModule from './ChatModule';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ChatModule/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}